<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.oracle.projectGo.learningGroupMapper">
    <select id="NoTotalLearningContentCnt" parameterType="int" resultType="int">
        <![CDATA[
            SELECT  COUNT(*)
            FROM    payments a
            join    gameContents b
            on      a.contentId = b.id
            WHERE   a.userId = #{userId}
            AND     b.subscribleStart <= SYSDATE
            AND     b.subscribleEnd >= SYSDATE
        ]]>
    </select>

    <select id="NoLearningContentList" parameterType="int" resultType="GameContents">
        <![CDATA[
        SELECT   a.id, a.userId, a.contentId, b.title, b.subscribleStart, b.subscribleEnd, b.maxSubscribers,
                 (SUM(c.groupSize)) AS AssignedPeople
        FROM     payments a
        JOIN     gameContents b
        ON       a.contentId = b.id
        JOIN     learningGroup c
        ON       b.id = c.contentId
        WHERE    a.userId = #{userId}
        AND      b.subscribleStart <= SYSDATE
        AND      b.subscribleEnd >= SYSDATE
        GROUP BY a.id, a.userId, a.contentId, b.title, b.subscribleStart, b.subscribleEnd, b.maxSubscribers
        ORDER BY a.contentId ASC
        ]]>
    </select>

    <select id="NoInsertFormLearningContent" parameterType="int" resultType="GameContents">
        SELECT  a.userId pay_userId, a.contentId, b.name, c.title, c.maxSubscribers, (SUM(d.groupSize)) AS AssignedPeople
        FROM    payments a
        JOIN    users b
        ON      a.userId = b.id
        JOIN    gameContents c
        ON      a.contentId = c.id
        JOIN    learningGroup d
        ON      c.id = d.contentId
        WHERE   c.id = #{id}
        GROUP BY a.userId, a.contentId, b.name, c.title, c.maxsubscribers
    </select>

    <insert id="NoInsertLearningGroup" parameterType="LearningGroup">
        INSERT INTO learningGroup(id, contentId, userId, name, startDate, endDate, groupSize, etc1, etc2)
        VALUES(LEARNINGGROUP_ID_SEQ.NEXTVAL, #{id}, #{userId}, #{name}, #{startDate}, #{endDate}, #{groupSize}, #{etc1}, #{etc2})
    </insert>

    <select id="NoTotalLearningGroupCnt" resultType="int">
        <![CDATA[
            SELECT COUNT(*)
            FROM   learningGroup
            WHERE  userId = #{userId}
            AND    startDate <= SYSDATE
            AND    endDate >= SYSDATE
        ]]>
    </select>

    <select id="NoLearningGroupList" parameterType="int" resultType="LearningGroup">
        <![CDATA[
        SELECT      a.id, a.contentId, a.userId, a.name, a.startDate, a.endDate, a.groupsize , b.title, COUNT(c.userId) AS studentCount
        FROM        learningGroup a
        JOIN        gameContents b
        ON          a.contentId = b.id
        LEFT JOIN   LearningGroupMember c
        ON          a.id = c.groupId
        WHERE       a.userId = #{userId}
        AND         a.startDate <= SYSDATE
        AND         a.endDate >= SYSDATE
        GROUP BY    a.id, a.contentId, a.userId, a.name, a.startDate, a.endDate, a.groupsize , b.title
        ORDER BY    a.id ASC
        ]]>
    </select>

    <select id="NoDetailLearningGroup" parameterType="learningGroup" resultType="LearningGroup">
        SELECT  a.groupId, a.userId, a.status, a.approvalDate,
                b.contentId, b.name, b.startDate, b.endDate, b.groupSize, b.etc1,
                b.etc2, c.name studentName, c.phone, c.email, c.address, d.title,
                COUNT(a.userId) OVER () AS studentCount
        FROM    learninggroupmember a
        JOIN    learninggroup b
        ON      a.groupid = b.id
        JOIN    users c
        ON      a.userid = c.id
        JOIN    gamecontents d
        ON      b.contentId = d.id
        WHERE   a.groupid = #{id}
    </select>

    <select id="NoUpdateFormLearningGroup" parameterType="int" resultType="LearningGroup">
        SELECT  a.*, b.title, b.maxSubscribers, c.name userName
        FROM    learningGroup a
        JOIN    gameContents b
        ON      a.contentId = b.id
        JOIN    users c
        ON      a.userId = c.id
        WHERE   a.id = #{id}
    </select>

    <update id="NoUpdateLearningGroup" parameterType="LearningGroup">
        UPDATE learningGroup SET name = #{name}, startDate = #{startDate},
                                 endDate = #{endDate}, groupSize = #{groupSize},
                                 etc1 = #{etc1}, etc2 = #{etc2}
        WHERE id = #{id}
    </update>

    <delete id="NoDeleteLearningGroupMember" parameterType="int">
        DELETE learningGroupMember WHERE groupId = #{id}
    </delete>

    <delete id="NoDeleteLearningGroup" parameterType="int">
        DELETE learningGroup WHERE id = #{id}
    </delete>

    <select id="NoTotalApprovalGroupMemberCnt" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM learningGroupMember
        WHERE groupId = #{id}
    </select>


    <select id="getGroupMemberByGroupId" resultType="Users">
        SELECT users.*
        FROM learningGroupMember lgm
        JOIN users ON lgm.userid = users.id
        WHERE lgm.groupId = #{groupId}
    </select>
    <select id="getGroupMembersByEducatorId" resultType="Users">
        SELECT u.id, u.nickname, u.userType, u.name, lg.name as groupName
        FROM learningGroup lg
        JOIN learningGroupMember lgm ON lg.id = lgm.groupId
        JOIN users u ON lgm.userId = u.id
        WHERE lg.userId = #{educatorId}
    </select>

    <select id="getUsersListByGroupInfo" resultType="Users" parameterType="LearningGroup">
        SELECT u.*
        FROM learningGroup lg
        JOIN learningGroupMember lgm ON lg.id = lgm.groupId
        JOIN users u ON lgm.userId= u.id
        WHERE lg.userId = #{userId}
        AND lg.contentId = #{contentId}
        <if test="id != null and id != '' and id != 0">
            AND lg.id = #{id}
        </if>
    </select>
    
    <!--강한빛 -->
    <select id="signUpLearningGroup" resultType="LearningGroup">
        SELECT   lg.id, lg.contentId, lg.userId, lg.name, TO_CHAR(lg.startdate, 'YYYY-MM-DD') as startdate, TO_CHAR(lg.enddate, 'YYYY-MM-DD') as enddate, lg.groupSize, lg.etc1, lg.etc2, g.imageName, g.imagePath, u.name as userName, g.title
        FROM     LearningGroup lg
        JOIN     Users u ON lg.userId = u.id
        JOIN     GameContents g ON lg.contentId = g.id
        ORDER BY lg.id desc
    </select>

</mapper>