<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.oracle.projectGo.DistributedHomeworksMapper">
<!--    <insert id="insertDistributedHomeworksByBulk" parameterType="java.util.List">-->
<!--        INSERT ALL-->
<!--        <foreach collection="list" item="item">-->
<!--            INTO DistributedHomeworks (homeworkId, userId, progress, createdAt)-->
<!--            VALUES ( #{item.homeworkId}, #{item.userId},#{item.progress},sysdate)-->
<!--        </foreach>-->
<!--        SELECT * FROM dual-->
<!--    </insert>-->
    <insert id="insertDistributedHomeworksByBulk" parameterType="java.util.List">
        <foreach collection="list" item="item" open="" close="" separator=";">
            MERGE INTO DistributedHomeworks USING dual ON (homeworkId = #{item.homeworkId} AND userId = #{item.userId})
            WHEN NOT MATCHED THEN
            INSERT (homeworkId, userId, progress, createdAt)
            VALUES (#{item.homeworkId}, #{item.userId}, #{item.progress}, SYSDATE)
        </foreach>
    </insert>
    <select id="getDistributedHomeworks" parameterType="DistributedHomeworks" resultType="DistributedHomeworks">
        SELECT
            D.*,
            H.title AS homeworkTitle,
            H.content AS homeworkContent,
            H.progress AS homeworkProgress,
            H.deadline AS homeworkDeadline,
            STD.name AS userName,
            EDU.name AS educatorName
        FROM
            DistributedHomeworks D
        LEFT JOIN
            Homeworks H ON D.homeworkId = H.id
        LEFT JOIN
            users STD ON D.userId = STD.id
        LEFT JOIN
            users EDU ON H.userId = EDU.id
        WHERE 1=1
        <if test="homeworkId != null and homeworkId != '' and homeworkId != 0  ">
            AND D.homeworkId = #{homeworkId}
        </if>
        <if test="userId != null and userId != '' and userId != 0  ">
            AND D.userId = #{userId}
        </if>
    </select>

<!--    <update id="updateDistributedHomeworks" parameterType="java.util.List" >
        <foreach collection="list" item="item" separator=";">
            UPDATE homework
            SET evaluation = #{item.evaluation}
            WHERE homeworkId = #{item.homeworkId} AND userId = #{item.userId}
        </foreach>
    </update>-->

<!--    <update id="updateDistributedHomeworks" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update distributedHomeworks
            <set>
                evaluation = #{item.evaluation}
            </set>
            WHERE homeworkId = #{item.homeworkId} AND userId = #{item.userId}
        </foreach>
    </update>-->

<!--    <update id="updateDistributedHomeworks" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="DECLARE BEGIN" close="END;" separator=";">
            update distributedHomeworks
            <set>
                evaluation = #{item.evaluation}
            </set>
            WHERE homeworkId = #{item.homeworkId} AND userId = #{item.userId}
        </foreach>
    </update>-->
    <update id="updateDistributedHomeworks" parameterType="java.util.List">
        BEGIN
        <foreach collection="list" item="item" index="index" open="" close="" separator="">
            UPDATE distributedHomeworks
            <set>
                evaluation = #{item.evaluation}
            </set>
            WHERE homeworkId = #{item.homeworkId} AND userId = #{item.userId};
        </foreach>
        END;
    </update>

    <update id="updateSubmissionList" parameterType="java.util.List">
        BEGIN
        <foreach collection="list" item="item" index="index" open="" close="" separator="">
            UPDATE distributedHomeworks
            <set>
                content = #{item.content},
                questions = #{item.questions},
                submissionDate = sysdate
            </set>
            WHERE homeworkId = #{item.homeworkId} AND userId = #{item.userId};
        </foreach>
        END;

    </update>
    <update id="updateSubmission" parameterType="DistributedHomeworks">
        UPDATE distributedHomeworks
        SET
            content = #{content},
            questions = #{questions},
            updatedAt = sysdate
        WHERE homeworkId = #{homeworkId} AND userId = #{userId}
    </update>

</mapper>